MIPSSIM
-----------
-----------


Compiling MIPSSIM
-------------------

MIPSSIM supplies a Makefile to build the sources and generate mipssim binary. Below are the targets supported by Makefile:
mipssim: To generate the binary use this target or specify no target i.e. invoke "make" or "make mipssim"
clean: To clean mipssim binary and all intermidiate files generated use this target as "make clean"


Command Synopsis
----------------

mipssim <Inputfilename> <Outputfilename> [-Tm:n]

Inputfilename - The file name of the binary input file.
Outputfilename - The file name to which to print the output.
-Tm:n - Optional argument to specify the start (m) and end (n) cycles of simulation tracing output. 
	-T0:0 prints only the final state (result after final cycle)
	Omitting this switch prints all cycles (Max number of supported cycle is 0xFFFFFFFF)

MIPSSIM is a simulator for MIPS32. It simulates out of order dynamic scheduling with speculation and in-order commit.

Current support includes simulation for program containing these instructions:

SW, LW
J, BEQ, BNE, BGEZ, BGTZ, BLEZ, BLTZ
ADDI, ADDIU
BREAK
SLT, SLTI , SLTU
SLL, SRL, SRA
SUB, SUBU, ADD, ADDU
AND, OR, XOR, NOR
NOP

The simulation uses a 1-bit branch predictor for prediction. Program termination is marked with commit of BREAK instruction.

This program is compiled and verified on both little endian system (X86_64) and big endian system (SUN SPARC at CISE) and reorders the byte as needed.

Assumptions:
1) The input file contains multiples of 32 bit words i.e. file size in bytes is a multiple of 4 (program uses C library function to determine size of file). If this condition is not met program throws a message for the same and exits
2) The data section normally starts at address 716. Simulation makes this assumption to display data memory.
3) Program assumes that input binary file is memory dump in big endian byte order.
